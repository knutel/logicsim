import { Button, VerticalBox, HorizontalBox } from "std-widgets.slint";
import { GraphView, NodeData, ConnectionData } from "graph.slint";

export component MainWindow inherits Window {
    title: "LogicSim";
    width: 800px;
    height: 600px;
    
    // Expose graph data properties with default values
    in property <[NodeData]> nodes: [];
    in property <[ConnectionData]> connections: [];
    in property <[string]> selected-nodes: [];
    in property <[string]> selected-connections: [];
    in property <string> editing-node-id: "";
    in property <string> editing-text: "";
    in property <bool> creating-connection: false;
    in property <length> pending-start-x;
    in property <length> pending-start-y;
    in property <length> pending-end-x;
    in property <length> pending-end-y;
    
    // Callback for handling graph pointer events
    callback graph-pointer-event(string, float, float);
    callback label-edit-completed(string, string);
    callback label-edit-changed(string);
    callback delete-clicked();
    
    
    VerticalBox {
        spacing: 10px;
        padding: 10px;
        
        // Title section
        HorizontalBox {
            alignment: center;
            height: 50px;
            
            Text {
                text: "LogicSim - Logic Circuit Simulator";
                font-size: 18px;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }
        
        // Main graph view
        GraphView {
            graph-width: 760px;
            graph-height: 480px;
            nodes: root.nodes;
            connections: root.connections;
            selected-nodes: root.selected-nodes;
            selected-connections: root.selected-connections;
            editing-node-id: root.editing-node-id;
            editing-text: root.editing-text;
            creating-connection: root.creating-connection;
            pending-start-x: root.pending-start-x;
            pending-start-y: root.pending-start-y;
            pending-end-x: root.pending-end-x;
            pending-end-y: root.pending-end-y;
            
            pointer-event(kind, x, y) => {
                root.graph-pointer-event(kind, x, y);
            }
            label-edit-completed(node_id, new_label) => {
                root.label-edit-completed(node_id, new_label);
            }
            label-edit-changed(text) => {
                root.label-edit-changed(text);
            }
        }
        
        // Control buttons
        HorizontalBox {
            alignment: center;
            spacing: 10px;
            height: 40px;
            
            Button {
                text: "Reset";
                width: 80px;
            }
            
            Button {
                text: "Simulate";
                width: 80px;
            }
            
            Button {
                text: "Delete";
                width: 80px;
                clicked => {
                    root.delete-clicked();
                }
            }
            
            Button {
                text: "Exit";
                width: 80px;
            }
        }
    }
}